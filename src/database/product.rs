//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.2

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "product")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub expiration_date: Option<Date>,
    pub quantity: i32,
    pub business_id: i32,
    pub parent_id: i32,
    pub is_accessible: bool,
    pub discount: i32,
    #[sea_orm(column_type = "Double")]
    pub price: f64,
    #[sea_orm(column_type = "Double")]
    pub profit: f64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::business::Entity",
        from = "Column::BusinessId",
        to = "super::business::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Business,
    #[sea_orm(
        belongs_to = "super::parent_product::Entity",
        from = "Column::ParentId",
        to = "super::parent_product::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    ParentProduct,
}

impl Related<super::business::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Business.def()
    }
}

impl Related<super::parent_product::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ParentProduct.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
